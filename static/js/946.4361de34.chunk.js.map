{"version":3,"file":"static/js/946.4361de34.chunk.js","mappings":"oSAOaA,EAAOC,EAAAA,GAAAA,KAAH,oKAYJC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,2G,SCTH,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,OAEL,EAYD,OACE,UAAChB,EAAD,CAAMiB,SAXa,SAAAJ,GAEnB,GADAA,EAAEK,iBACmB,KAAjBV,EAAMW,QAAqC,KAApBT,EAASS,OAClC,OAAOC,EAAAA,GAAAA,MAAY,2CAErBf,EAASgB,EAAAA,GAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACb,EAG+BW,aAAa,MAA3C,WACE,SAACpB,EAAD,CACEqB,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLX,KAAK,QACLC,MAAOR,EACPmB,SAAUf,KAIZ,SAACV,EAAD,CACEqB,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACLX,KAAK,WACLC,MAAON,EACPiB,SAAUf,KAKV,SAACgB,EAAA,EAAD,CACEJ,QAAQ,YACRC,MAAM,YACNI,KAAK,QACLH,KAAK,SAJP,sBAaP,C","sources":["views/LoginView/LoginView.styled.js","views/LoginView/LoginView.js"],"sourcesContent":["import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\n// const Button = styled.button`\n//   color: grey;\n// `;\n\nexport const Form = styled.form`\nmax-width: 400px;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 10px;\nmargin-bottom: 30px;\npadding: 40px 0;\ntext-align: center;\n`;\n\n\n\nexport const Field = styled(TextField)`\nmargin-bottom: 20px !important;\nwidth: 100%;\nbackground-color: #fff !important;\n`;\n  \n//   .textField {\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { toast } from 'react-toastify';\n\nimport Button from '@mui/material/Button';\nimport Loader from '../../components/Loader/Loader';\n//import s from './LoginView.module.css';\nimport {Form, Field} from './LoginView.styled';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  //const isLoading = useSelector(authSelectors.getLoading);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('ðŸ’© Please fill in all fields!');\n    }\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Field\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        \n      />\n\n      <Field\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        \n      />\n\n      \n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Log in\n        </Button>\n      \n\n      {/* {isLoading && <Loader/>} */}\n    </Form>\n  );\n}"],"names":["Form","styled","Field","TextField","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","onSubmit","preventDefault","trim","toast","authOperations","autoComplete","label","variant","color","type","onChange","Button","size"],"sourceRoot":""}