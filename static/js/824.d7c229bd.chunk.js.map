{"version":3,"file":"static/js/824.d7c229bd.chunk.js","mappings":"kPAIaA,EAAOC,EAAAA,GAAAA,KAAH,oKAYJC,EAAQD,EAAAA,GAAAA,MAAH,+N,iDCVH,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACdJ,GAAQ,SAAAK,GAAQ,yBAAUA,GAAV,cAAqBT,EAAOQ,GAA5B,GACjB,EAQOR,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAErB,OAEI,UAACT,EAAD,CAAMiB,SAVW,SAAAJ,GACnBA,EAAMK,iBACNd,EAASe,EAAAA,GAAAA,UAAA,UAA6BT,KACtCC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC1C,EAMG,WACE,qCAEE,SAACP,EAAD,CAEEkB,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,8DACNC,YAAY,eACZC,UAAQ,EACRT,MAAOR,EACPkB,SAAUb,QAGd,sCAEE,SAACV,EAAD,CACEkB,KAAK,QACLb,KAAK,QACLc,QAAQ,mDACRC,MAAM,mBACNC,YAAY,wBACZC,UAAQ,EACRT,MAAOP,EACPiB,SAAUb,QAGd,yCAEE,SAACV,EAAD,CAEEkB,KAAK,WACLb,KAAK,WACLiB,UAAQ,EACRT,MAAON,EACPgB,SAAUb,QAGd,SAACc,EAAA,EAAD,CAAQN,KAAK,SAAb,wBAMP,C","sources":["views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const Form = styled.form`\nmax-width: 400px;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 10px;\nmargin-bottom: 30px;\npadding: 40px 0;\ntext-align: center;\n`;\n\n\n\nexport const Field = styled.input`\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0 20px;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\ntransition: background-color 0.5s ease-in-out;\n`;"," import { Form, Field} from './RegisterView.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport Button from '@mui/material/Button';\n\nexport default function RegistrationView() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ ...form }));\n    setForm({ name: '', email: '', password: '' });\n  };\n\n  const { name, email, password } = form;\n\n  return (\n    \n      <Form onSubmit={handleSubmit}>\n        <label >\n          Name\n          <Field\n            \n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Example John\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Email\n          <Field\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label >\n          Password\n          <Field\n            \n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <Button type=\"submit\" >\n          Register\n        </Button>\n      </Form>\n   \n  );\n}"],"names":["Form","styled","Field","RegistrationView","dispatch","useDispatch","useState","name","email","password","form","setForm","handleChange","event","currentTarget","value","prevForm","onSubmit","preventDefault","authOperations","type","pattern","title","placeholder","required","onChange","Button"],"sourceRoot":""}