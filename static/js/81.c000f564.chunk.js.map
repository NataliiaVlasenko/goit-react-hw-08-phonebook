{"version":3,"file":"static/js/81.c000f564.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","isControlled","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}